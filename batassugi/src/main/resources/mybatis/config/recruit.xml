<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="recruit">
  <insert id="registerRecruit" parameterType="recruitVo">
    insert into recruit 
    values(recruit_seq.nextval, #{farmVo.farmNo}, #{recruitKind}, 
    sysdate, #{recruitEnddate}, #{price}, #{recruitContent}, '모집중', #{recruitSize})
  </insert>
  
  <select id="findRestFarmSizeByFarmNo" parameterType="string" resultType="string">
    select (farm_size-(select coalesce(sum(r.rent_size),0) from rent r, recruit c, farm f 
    where c.recruit_no=r.recruit_no and c.farm_no=f.farm_no and f.farm_no=#{farmNo}
    and r.rent_status='승인' and r.rent_status='대기')-(
    select coalesce(sum(recruit_size),0) from recruit where farm_no=#{farmNo}))
    from farm
    where farm_no=#{farmNo}
  </select>
  
  <select id="findMaxRecruitMonth" parameterType="string" resultType="string">
    select ROUND(MONTHS_BETWEEN(farm_enddate,sysdate)) AS maxRentMonth from farm
    where farm_no=#{farmNo}
  </select>
  
  <update id="updateRentStatusConfirm" parameterType="string">
    update rent set rent_Status='승인', rent_startdate=sysdate where rent_no=#{rentNo} 
  </update>
  
  <update id="updateRentStatusReject" parameterType="string">
    update rent set rent_Status='거절' where rent_no=#{rentNo} 
  </update>
  <resultMap type="recruitVo" id="recruitVoRM">
    <result column="farmNo" property="farmVo.farmNo" />
    <result column="farmAddress" property="farmVo.farmAddress" />
    <result column="farmEnddate" property="farmVo.farmEnddate" />
    <result column="id" property="farmVo.memberInfoVo.memberVo.id" />
    <result column="name" property="farmVo.memberInfoVo.memberVo.name" />
    <result column="nickname" property="farmVo.memberInfoVo.memberVo.nickname" />
    <result column="tel" property="farmVo.memberInfoVo.tel" />
    <result column="email" property="farmVo.memberInfoVo.email" />
  </resultMap>
  <select id="findRentDetailByRecruitNo" resultMap="recruitVoRM" parameterType="int">
    SELECT R.recruit_no AS recruitNo, R.recruit_kind AS recruitKind, R.recruit_size AS recruitSize, 
    ROUND(MONTHS_BETWEEN(F.farm_enddate, R.recruit_startdate)) AS maxRentMonth, 
    R.price AS price, R.recruit_content AS recruitContent, R.recruit_status AS recruitStatus, 
    R.farm_no AS FarmNo, F.farm_address AS farmAddress, to_char(F.farm_enddate,'yy.mm.dd') AS farmEnddate,
    M.name, M.nickname, I.tel, I.email
    FROM recruit R, farm F, spider_member M, member_info I 
    WHERE r.farm_no = f.farm_no
    AND f.id = m.id 
    AND m.id = i.id 
    AND ROUND(MONTHS_BETWEEN(f.farm_enddate, r.recruit_startdate)) > 0
    AND r.recruit_no = #{recruitNo}
  </select>
  
  <select id="getRentList" resultMap="recruitVoRM" parameterType="buyerPagingBean">
    SELECT R.recruit_no AS recruitNo, R.recruit_kind AS recruitKind, 
    to_char(R.recruit_enddate, 'yy.mm.dd') AS recruitEnddate, 
    R.recruit_status AS recruitStatus, R.recruit_size AS recruitSize, R.farm_no AS farmNo,
    F.farm_address AS farmAddress
    FROM (
      SELECT row_number() OVER(ORDER BY recruit_no DESC) AS rnum, recruit_no, recruit_kind, 
      recruit_enddate, recruit_status, recruit_size, farm_no 
      FROM recruit)R, farm F
    WHERE R.farm_no = F.farm_no
    AND rnum BETWEEN #{startRowNumber} AND #{endRowNumber}
    ORDER BY rnum DESC
  </select>
  
  <select id="totalRentListCount" resultType="int">
    SELECT count(*)
    FROM recruit
  </select>
  
  <select id="findFarmAvailableCropsListByFarmNo" resultType="cropsVo" parameterType="int">
    SELECT c.crops_no AS cropsNo, c.crops_name AS cropsName, c.crops_level AS cropsLevel
    FROM farm f, recruit r, AVAILABLE_CROPS a, crops c
    WHERE r.farm_no = f.farm_no 
    AND f.farm_no = a.farm_no 
    AND a.crops_no = c.crops_no
    AND f.farm_no = #{farmNo}
  </select>
  
  
  <!-- 승인이 거절 되었을 때, 신청한 량을 다시 모집량에 추가한다. -->
  <update id="updateRecruitSize">
    update recruit set recruit_size=recruit_size+(select rent_size from rent where rent_no=#{rentNo)
    where recruit_no=(select recruit_no from rent where rent_no=#{rentNo})
  </update>
</mapper>
 <!--
 CREATE TABLE recruit
(
    recruit_no           NUMBER          NOT NULL, 
    farm_no              NUMBER          NOT NULL, 
    recruit_kind         VARCHAR2(50)    NOT NULL, 
    recruit_startdate    DATE            NOT NULL, 
    recruit_enddate      DATE            NOT NULL, 
    price                NUMBER          NOT NULL, 
    recruit_content      CLOB            NOT NULL, 
    recruit_status       VARCHAR2(50)    NOT NULL, 
    recruit_size         NUMBER          NOT NULL,  
  -->



   
